<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dropship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//Movement
state = scr_dropship_move_in_path; //Used
_acceleration = 0.1; //Used
_topspeed = 1.5; //Used

//HP
hp = 4; //Used
max_hp = 4; //Used

//Load size
min_load = 1; //Used
max_load = 6; //Used
load = choose (1, 2, 3, 4, 5, 6); //Used
load_timer = 150; //Used

//Stunned
stunned = 0; //Used
stunned_timer = 0; //Used

//Is targeted
is_target = 0;

//Directed
path = path_add(); //Used
directed = 0; 
docked = 0; //Used

//Node target
cur_node = global.targetnode; //Used
global.targetnode = 0; //Used

//Current Target
cur_target = global.nodedock[cur_node]; //temp

//Path Ticker
pathlock = 0; //Used

//Return Points
_x = x; 
_y = y;

//Debug
statename = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States and Movement
//Movement states
_direction = (point_direction(x, y, cur_target.x, cur_target.y)); //Point toward current target

if !(docked) &amp;&amp; (load){//Not docked with load
    state = scr_dropship_move_in_path;
}
if (docked){ //At dock
    if (load){ //Has load
        state = scr_dropship_docked;
    }
    if !(load){// Has no load
        state = scr_dropship_move_out_path;
    }
}

script_execute(state); //Run current state

//Destruction
if (hp &lt; 0){
    create_explosion(x,y);
    global.survivors_lost += load;
    global.nodeocc[cur_node] = 0;
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
///Draw Self 3D
script_execute(draw_3d);

//Draw Load
script_execute(draw_load);

//Debug
draw_text(x, y+10, statename);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
