<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Varaibles
//Pause
global.pause = 0;
//Score
global.survivors = 25;
global.survivors_lost = 0;

//Node assignments
global.node[1] = obj_node1;
global.node[2] = obj_node2;
global.node[3] = obj_node3;
global.node[4] = obj_node4;
global.node[5] = obj_node5;

//Node Names
global.node1name = "1";
global.node2name = "Roger";
global.node3name = "3";
global.node4name = "Ducky";
global.node5name = "5";
global.node6name = "6";
global.node7name = "7";
global.node8name = "8";


//Current Free Node
global.freenode = 0;

//Is Node Occupied
global.nodeocc[1] = 0;
global.nodeocc[2] = 0;
global.nodeocc[3] = 0;
global.nodeocc[4] = 0;
global.nodeocc[5] = 0;

nodenumb = 1;
global.targetnode = 0;

//Node Docks
global.nodedock[1] = obj_node1dock;
global.nodedock[2] = obj_node2dock;
global.nodedock[3] = obj_node3dock;
global.nodedock[4] = obj_node4dock;
global.nodedock[5] = obj_node5dock;

//Ring Center
global._x = obj_ring.x;
global._y = obj_ring.y;

//Debug Variables - Remove when finished
player = obj_player_3d;
debrisspawner = 0;
debris = 0;


//Node placement
//if !(nodeplacement){
//    script_execute(scr_nodeplacement);
//    nodeplacement = 1;
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TO DO
//Fix nodes reporting being empty when they're already occupied
//Fix dropship turning and path out (currently they won't leave the dock)
//Improve enemy AI so it isn't entirely stupid
//Add player to node functionality; Allow player to unload cargo to the core. 
//Add player targeting system.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global Controls

//Cycle through occupied nodes
if !(global.nodeocc[nodenumb] == 0){
    nodenumb += 1;
} else {
    global.freenode = nodenumb;
}


if (nodenumb == 6){
    nodenumb = 1;
}

//Debug Testing
//Restart the room
var esc = keyboard_check(vk_escape);
if (esc){
    room_restart();
}

//Animation test screen
var ani_test =  keyboard_check_released(ord("T"));
if (ani_test){
    room_goto(rm_anitest);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create temp enemy on click
instance_create(mouse_x, mouse_y, obj_enemyscout);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD &amp; Debug
//Player Energy Meter
draw_sprite(spr_energymeter, 0, view_wview[0] div 2 - 50, 5);
draw_sprite_ext(spr_energymeter, 1, view_wview[0] div 2 - 50, 5, player.energy/player.max_energy, 1, 0, c_white, 1);
draw_sprite(spr_energymeter, 2, view_wview[0] div 2 - 50, 5);


//Debug Text
draw_set_color(c_white);
//draw_text(25, 25, "X: "+string(player.x));
//draw_text(25, 45, "Y: "+string(player.y));
//draw_text(25, 65, "HP: "+string(player.hp));
//draw_text(25, 85, "Freenode: "+string(global.freenode));
//draw_text(25, 105, "Debris: "+string(debris));

//Draw Rail X &amp; Y points
//draw_text(25, 25, "Point2: " +string(obj_ring.x + lengthdir_x(250, 67.5)) +", " +string(obj_ring.y + lengthdir_y(250, 67.5))); 
//draw_text(25, 45, "Point3: " +string(obj_ring.x + lengthdir_x(250, 45)) +", " +string(obj_ring.y + lengthdir_y(250, 45))); 
//draw_text(25, 65, "Point4: " +string(obj_ring.x + lengthdir_x(250, 22.5)) +", " +string(obj_ring.y + lengthdir_y(250, 22.5))); 
//draw_text(25, 85, "Point6: " +string(obj_ring.x + lengthdir_x(250, 337.5)) +", " +string(obj_ring.y + lengthdir_y(250, 337.5))); 
//draw_text(25, 105, "Point7: " +string(obj_ring.x + lengthdir_x(250, 315)) +", " +string(obj_ring.y + lengthdir_y(250, 315))); 
//draw_text(25, 125, "Point7: " +string(obj_ring.x + lengthdir_x(250, 292.5)) +", " +string(obj_ring.y + lengthdir_y(250, 292.5))); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
